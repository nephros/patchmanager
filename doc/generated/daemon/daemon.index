<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="https://github.com/sailfishos-patches/patchmanager" title="Patchmanager Daemon Reference Documentation" version="2.0" project="daemon">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="daemon">
        <page name="index.html" href="index.html" status="active" location="daemon.qdoc" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/daemon.qdoc" lineno="1" subtype="page" title="Patchmanager Documentation: Daemon" fulltitle="Patchmanager Documentation: Daemon" subtitle="" module="daemon">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="documentation" title="Documentation:" level="2"/>
        </page>
        <class threadsafety="unspecified" name="INotifyWatcher" href="inotifywatcher.html" status="internal" access="private" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="41">
            <function threadsafety="unspecified" name="INotifyWatcher" fullname="INotifyWatcher::INotifyWatcher" href="inotifywatcher.html#INotifyWatcher" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="45" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="INotifyWatcher(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="addPaths" fullname="INotifyWatcher::addPaths" href="inotifywatcher.html#addPaths" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QStringList" signature="QStringList addPaths(const QStringList &amp;paths)">
                <parameter left="const QStringList &amp;" right="" name="paths" default=""/>
            </function>
            <function threadsafety="unspecified" name="getPathFromID" fullname="INotifyWatcher::getPathFromID" href="inotifywatcher.html#getPathFromID" status="active" access="private" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="60" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString getPathFromID(int id) const">
                <parameter left="int" right="" name="id" default=""/>
            </function>
            <function threadsafety="unspecified" name="readFromInotify" fullname="INotifyWatcher::readFromInotify" href="inotifywatcher.html#readFromInotify" status="active" access="private" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="57" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void readFromInotify()"/>
            <function threadsafety="unspecified" name="removePaths" fullname="INotifyWatcher::removePaths" href="inotifywatcher.html#removePaths" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QStringList" signature="QStringList removePaths(const QStringList &amp;paths)">
                <parameter left="const QStringList &amp;" right="" name="paths" default=""/>
            </function>
            <function threadsafety="unspecified" name="~INotifyWatcher" fullname="INotifyWatcher::~INotifyWatcher" href="inotifywatcher.html#dtor.INotifyWatcher" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="46" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="~INotifyWatcher()"/>
            <function threadsafety="unspecified" name="contentChanged" fullname="INotifyWatcher::contentChanged" href="inotifywatcher.html#contentChanged" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="54" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void contentChanged(const QString &amp;path, bool created)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="bool" right="" name="created" default=""/>
            </function>
            <function threadsafety="unspecified" name="directoryChanged" fullname="INotifyWatcher::directoryChanged" href="inotifywatcher.html#directoryChanged" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="52" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void directoryChanged(const QString &amp;path, bool removed)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="bool" right="" name="removed" default=""/>
            </function>
            <function threadsafety="unspecified" name="fileChanged" fullname="INotifyWatcher::fileChanged" href="inotifywatcher.html#fileChanged" status="active" access="public" location="inotifywatcher.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/inotifywatcher.h" lineno="53" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void fileChanged(const QString &amp;path, bool removed)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
                <parameter left="bool" right="" name="removed" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="Journal" href="journal.html" status="internal" access="private" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="40">
            <function threadsafety="unspecified" name="Journal" fullname="Journal::Journal" href="journal.html#Journal" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="44" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="Journal(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="init" fullname="Journal::init" href="journal.html#init" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="54" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void init()"/>
            <function threadsafety="unspecified" name="process" fullname="Journal::process" href="journal.html#process" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="55" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void process()"/>
            <function threadsafety="unspecified" name="wait" fullname="Journal::wait" href="journal.html#wait" status="active" access="private" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="58" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void wait()"/>
            <function threadsafety="unspecified" name="matchFound" fullname="Journal::matchFound" href="journal.html#matchFound" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="51" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void matchFound()"/>
        </class>
        <class threadsafety="unspecified" name="JournalWaiter" href="journalwaiter.html" status="internal" access="private" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="10">
            <function threadsafety="unspecified" name="JournalWaiter" fullname="JournalWaiter::JournalWaiter" href="journalwaiter.html#JournalWaiter" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="14" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="JournalWaiter(sd_journal *sdj)">
                <parameter left="sd_journal *" right="" name="sdj" default=""/>
            </function>
            <function threadsafety="unspecified" name="canProcess" fullname="JournalWaiter::canProcess" href="journalwaiter.html#canProcess" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="36" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void canProcess()"/>
            <function threadsafety="unspecified" name="pollAgain" fullname="JournalWaiter::pollAgain" href="journalwaiter.html#pollAgain" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="37" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void pollAgain()"/>
            <function threadsafety="unspecified" name="pollFailed" fullname="JournalWaiter::pollFailed" href="journalwaiter.html#pollFailed" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="35" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void pollFailed()"/>
            <function threadsafety="unspecified" name="start" fullname="JournalWaiter::start" href="journalwaiter.html#start" status="active" access="public" location="journal.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/journal.h" lineno="20" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void start()"/>
        </class>
        <variable threadsafety="unspecified" name="DBUS_PATH_NAME" status="internal" access="private" location="patchmanager_include.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanager_include.h" lineno="39" type="const QString = QStringLiteral( &quot;/org/SfietKonstantin/patchmanager&quot; )" static="true"/>
        <variable threadsafety="unspecified" name="DBUS_SERVICE_NAME" status="internal" access="private" location="patchmanager_include.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanager_include.h" lineno="38" type="const QString = QStringLiteral( &quot;org.SfietKonstantin.patchmanager&quot; )" static="true"/>
        <class threadsafety="unspecified" name="PatchManagerObject" href="patchmanagerobject.html" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="76" module="PatchManagerDaemon" brief="Patchmanager Daemon">
            <function threadsafety="unspecified" name="PatchManagerObject" fullname="PatchManagerObject::PatchManagerObject" href="patchmanagerobject.html#PatchManagerObject" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="80" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="PatchManagerObject(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="applyPatch" fullname="PatchManagerObject::applyPatch" href="patchmanagerobject.html#applyPatch" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="98" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantMap" signature="QVariantMap applyPatch(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="checkEaster" fullname="PatchManagerObject::checkEaster" href="patchmanagerobject.html#checkEaster" status="internal" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="108" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString checkEaster()"/>
            <function threadsafety="unspecified" name="checkForUpdates" fullname="PatchManagerObject::checkForUpdates" href="patchmanagerobject.html#checkForUpdates" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="112" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void checkForUpdates()"/>
            <function threadsafety="unspecified" name="checkIsFakeLinked" fullname="PatchManagerObject::checkIsFakeLinked" href="patchmanagerobject.html#checkIsFakeLinked" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="227" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool checkIsFakeLinked(const QString &amp;path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function threadsafety="unspecified" name="checkVote" fullname="PatchManagerObject::checkVote" href="patchmanagerobject.html#checkVote" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="105" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int checkVote(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="clearFakeroot" fullname="PatchManagerObject::clearFakeroot" href="patchmanagerobject.html#clearFakeroot" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="191" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void clearFakeroot()"/>
            <function threadsafety="unspecified" name="doCheckEaster" fullname="PatchManagerObject::doCheckEaster" href="patchmanagerobject.html#doCheckEaster" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="173" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doCheckEaster(const QDBusMessage &amp;message)">
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="doCheckVote" fullname="PatchManagerObject::doCheckVote" href="patchmanagerobject.html#doCheckVote" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="170" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doCheckVote(const QString &amp;patch, const QDBusMessage &amp;message)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <target name="docheckvote" title="doCheckVote"/>
            </function>
            <function threadsafety="unspecified" name="doInstallPatch" fullname="PatchManagerObject::doInstallPatch" href="patchmanagerobject.html#doInstallPatch" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="165" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doInstallPatch(const QVariantMap &amp;params, const QDBusMessage &amp;message)">
                <parameter left="const QVariantMap &amp;" right="" name="params" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="doListPatches" fullname="PatchManagerObject::doListPatches" href="patchmanagerobject.html#doListPatches" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="159" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doListPatches(const QDBusMessage &amp;message)">
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="doPatch" fullname="PatchManagerObject::doPatch" href="patchmanagerobject.html#doPatch" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="161" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool doPatch(const QString &amp;patchName, bool apply, QString *patchLog)">
                <parameter left="const QString &amp;" right="" name="patchName" default=""/>
                <parameter left="bool" right="" name="apply" default=""/>
                <parameter left="QString *" right="" name="patchLog" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="doPatch" fullname="PatchManagerObject::doPatch" href="patchmanagerobject.html#doPatch-1" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="162" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doPatch(const QVariantMap &amp;params, const QDBusMessage &amp;message, bool apply)">
                <parameter left="const QVariantMap &amp;" right="" name="params" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <parameter left="bool" right="" name="apply" default=""/>
            </function>
            <function threadsafety="unspecified" name="doPrepareCache" fullname="PatchManagerObject::doPrepareCache" href="patchmanagerobject.html#doPrepareCache" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="155" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doPrepareCache(const QString &amp;patchName, bool apply)">
                <parameter left="const QString &amp;" right="" name="patchName" default=""/>
                <parameter left="bool" right="" name="apply" default="true"/>
            </function>
            <function threadsafety="unspecified" name="doPrepareCacheRoot" fullname="PatchManagerObject::doPrepareCacheRoot" href="patchmanagerobject.html#doPrepareCacheRoot" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="154" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doPrepareCacheRoot()"/>
            <function threadsafety="unspecified" name="doRefreshPatchList" fullname="PatchManagerObject::doRefreshPatchList" href="patchmanagerobject.html#doRefreshPatchList" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="158" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doRefreshPatchList()"/>
            <function threadsafety="unspecified" name="doRegisterDBus" fullname="PatchManagerObject::doRegisterDBus" href="patchmanagerobject.html#doRegisterDBus" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="153" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doRegisterDBus()"/>
            <function threadsafety="unspecified" name="doResetPatchState" fullname="PatchManagerObject::doResetPatchState" href="patchmanagerobject.html#doResetPatchState" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="163" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doResetPatchState(const QString &amp;patch, const QDBusMessage &amp;message)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <target name="doresetpatchstate" title="doResetPatchState"/>
            </function>
            <function threadsafety="unspecified" name="doRestartKeyboard" fullname="PatchManagerObject::doRestartKeyboard" href="patchmanagerobject.html#doRestartKeyboard" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="183" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doRestartKeyboard()"/>
            <function threadsafety="unspecified" name="doRestartLipstick" fullname="PatchManagerObject::doRestartLipstick" href="patchmanagerobject.html#doRestartLipstick" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="180" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doRestartLipstick()"/>
            <function threadsafety="unspecified" name="doStartLocalServer" fullname="PatchManagerObject::doStartLocalServer" href="patchmanagerobject.html#doStartLocalServer" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="156" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doStartLocalServer()"/>
            <function threadsafety="unspecified" name="doUninstallPatch" fullname="PatchManagerObject::doUninstallPatch" href="patchmanagerobject.html#doUninstallPatch" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="168" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void doUninstallPatch(const QString &amp;patch, const QDBusMessage &amp;message)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="downloadCatalog" fullname="PatchManagerObject::downloadCatalog" href="patchmanagerobject.html#downloadCatalog" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="110" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantList" signature="QVariantList downloadCatalog(const QVariantMap &amp;params)">
                <parameter left="const QVariantMap &amp;" right="" name="params" default=""/>
            </function>
            <function threadsafety="unspecified" name="downloadPatch" fullname="PatchManagerObject::downloadPatch" href="patchmanagerobject.html#downloadPatch" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="207" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void downloadPatch(const QString &amp;patch, const QUrl &amp;url, const QString &amp;file)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QUrl &amp;" right="" name="url" default=""/>
                <parameter left="const QString &amp;" right="" name="file" default=""/>
            </function>
            <function threadsafety="unspecified" name="downloadPatchArchive" fullname="PatchManagerObject::downloadPatchArchive" href="patchmanagerobject.html#downloadPatchArchive" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="166" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void downloadPatchArchive(const QVariantMap &amp;params, const QDBusMessage &amp;message)">
                <parameter left="const QVariantMap &amp;" right="" name="params" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="downloadPatchInfo" fullname="PatchManagerObject::downloadPatchInfo" href="patchmanagerobject.html#downloadPatchInfo" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="111" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantMap" signature="QVariantMap downloadPatchInfo(const QString &amp;name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="eraseRecursively" fullname="PatchManagerObject::eraseRecursively" href="patchmanagerobject.html#eraseRecursively" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="225" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void eraseRecursively(const QString &amp;path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function threadsafety="unspecified" name="eventFilter" fullname="PatchManagerObject::eventFilter" href="patchmanagerobject.html#eventFilter" status="active" access="protected" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool eventFilter(QObject *watched, QEvent *event)">
                <parameter left="QObject *" right="" name="watched" default=""/>
                <parameter left="QEvent *" right="" name="event" default=""/>
            </function>
            <function threadsafety="unspecified" name="getAppliedPatches" fullname="PatchManagerObject::getAppliedPatches" href="patchmanagerobject.html#getAppliedPatches" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QSet&lt;QString&gt;" signature="QSet&lt;QString&gt; getAppliedPatches() const"/>
            <function threadsafety="unspecified" name="getFailure" fullname="PatchManagerObject::getFailure" href="patchmanagerobject.html#getFailure" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="129" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool getFailure() const"/>
            <function threadsafety="unspecified" name="getLoaded" fullname="PatchManagerObject::getLoaded" href="patchmanagerobject.html#getLoaded" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="130" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool getLoaded() const"/>
            <function threadsafety="unspecified" name="getMangleCandidates" fullname="PatchManagerObject::getMangleCandidates" href="patchmanagerobject.html#getMangleCandidates" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="185" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QStringList" signature="QStringList getMangleCandidates()"/>
            <function threadsafety="unspecified" name="getOsVersion" fullname="PatchManagerObject::getOsVersion" href="patchmanagerobject.html#getOsVersion" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="137" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString getOsVersion() const"/>
            <function threadsafety="unspecified" name="getPatchName" fullname="PatchManagerObject::getPatchName" href="patchmanagerobject.html#getPatchName" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="199" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString getPatchName(const QString patch) const">
                <parameter left="const QString" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="getPatchmanagerVersion" fullname="PatchManagerObject::getPatchmanagerVersion" href="patchmanagerobject.html#getPatchmanagerVersion" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="136" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString getPatchmanagerVersion() const"/>
            <function threadsafety="unspecified" name="getRpmName" fullname="PatchManagerObject::getRpmName" href="patchmanagerobject.html#getRpmName" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="201" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QString" signature="QString getRpmName(const QString &amp;rpm) const">
                <parameter left="const QString &amp;" right="" name="rpm" default=""/>
            </function>
            <function threadsafety="unspecified" name="getSettings" fullname="PatchManagerObject::getSettings" href="patchmanagerobject.html#getSettings-1" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="120" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QDBusVariant" signature="QDBusVariant getSettings(const QString &amp;name, const QDBusVariant &amp;def)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QDBusVariant &amp;" right="" name="def" default=""/>
            </function>
            <function threadsafety="unspecified" name="getSettings" fullname="PatchManagerObject::getSettings" href="patchmanagerobject.html#getSettings" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="119" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QVariant" signature="QVariant getSettings(const QString &amp;name, const QVariant &amp;def) const">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QVariant &amp;" right="" name="def" default=""/>
            </function>
            <function threadsafety="unspecified" name="getToggleServices" fullname="PatchManagerObject::getToggleServices" href="patchmanagerobject.html#getToggleServices" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="127" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool getToggleServices() const"/>
            <function threadsafety="unspecified" name="getToggleServicesList" fullname="PatchManagerObject::getToggleServicesList" href="patchmanagerobject.html#getToggleServicesList" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="128" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QStringList" signature="QStringList getToggleServicesList() const"/>
            <function threadsafety="unspecified" name="getUpdates" fullname="PatchManagerObject::getUpdates" href="patchmanagerobject.html#getUpdates" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="114" virtual="non" meta="slot" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QVariantMap" signature="QVariantMap getUpdates() const"/>
            <function threadsafety="unspecified" name="getVersion" fullname="PatchManagerObject::getVersion" href="patchmanagerobject.html#getVersion" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="219" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void getVersion()"/>
            <function threadsafety="unspecified" name="getVote" fullname="PatchManagerObject::getVote" href="patchmanagerobject.html#getVote" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="203" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int getVote(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="initialize" fullname="PatchManagerObject::initialize" href="patchmanagerobject.html#initialize" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="197" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void initialize()"/>
            <function threadsafety="unspecified" name="installPatch" fullname="PatchManagerObject::installPatch" href="patchmanagerobject.html#installPatch" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="101" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool installPatch(const QString &amp;patch, const QString &amp;version, const QString &amp;url)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QString &amp;" right="" name="version" default=""/>
                <parameter left="const QString &amp;" right="" name="url" default=""/>
            </function>
            <function threadsafety="unspecified" name="isPatchApplied" fullname="PatchManagerObject::isPatchApplied" href="patchmanagerobject.html#isPatchApplied" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="97" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool isPatchApplied(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="lateInitialize" fullname="PatchManagerObject::lateInitialize" href="patchmanagerobject.html#lateInitialize" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="221" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void lateInitialize()"/>
            <function threadsafety="unspecified" name="lipstickChanged" fullname="PatchManagerObject::lipstickChanged" href="patchmanagerobject.html#lipstickChanged" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="134" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void lipstickChanged(const QString &amp;state)">
                <parameter left="const QString &amp;" right="" name="state" default=""/>
            </function>
            <function threadsafety="unspecified" name="listPatches" fullname="PatchManagerObject::listPatches" href="patchmanagerobject.html#listPatches" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="95" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantList" signature="QVariantList listPatches()"/>
            <function threadsafety="unspecified" name="listPatchesFromDir" fullname="PatchManagerObject::listPatchesFromDir" href="patchmanagerobject.html#listPatchesFromDir" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QList&lt;QVariantMap&gt;" signature="QList&lt;QVariantMap&gt; listPatchesFromDir(const QString &amp;dir, QSet&lt;QString&gt; &amp;existingPatches, bool existing)">
                <parameter left="const QString &amp;" right="" name="dir" default=""/>
                <parameter left="QSet&lt;QString&gt; &amp;" right="" name="existingPatches" default=""/>
                <parameter left="bool" right="" name="existing" default="true"/>
            </function>
            <function threadsafety="unspecified" name="listVersions" fullname="PatchManagerObject::listVersions" href="patchmanagerobject.html#listVersions" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="96" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantMap" signature="QVariantMap listVersions()"/>
            <function threadsafety="unspecified" name="loadRequest" fullname="PatchManagerObject::loadRequest" href="patchmanagerobject.html#loadRequest" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="132" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void loadRequest(bool apply)">
                <parameter left="bool" right="" name="apply" default=""/>
            </function>
            <function threadsafety="unspecified" name="makePatch" fullname="PatchManagerObject::makePatch" href="patchmanagerobject.html#makePatch" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool makePatch(const QDir &amp;root, const QString &amp;patchPath, QVariantMap &amp;patch, bool available)">
                <parameter left="const QDir &amp;" right="" name="root" default=""/>
                <parameter left="const QString &amp;" right="" name="patchPath" default=""/>
                <parameter left="QVariantMap &amp;" right="" name="patch" default=""/>
                <parameter left="bool" right="" name="available" default=""/>
            </function>
            <function threadsafety="unspecified" name="maxVersion" fullname="PatchManagerObject::maxVersion" href="patchmanagerobject.html#maxVersion" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="122" virtual="non" meta="slot" const="false" static="true" overload="false" delete="false" default="false" final="false" type="QString" signature="QString maxVersion(const QString &amp;version1, const QString &amp;version2)">
                <parameter left="const QString &amp;" right="" name="version1" default=""/>
                <parameter left="const QString &amp;" right="" name="version2" default=""/>
            </function>
            <function threadsafety="unspecified" name="notify" fullname="PatchManagerObject::notify" href="patchmanagerobject.html#notify" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="214" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void notify(const QString &amp;patch, PatchManagerObject::NotifyAction action)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="PatchManagerObject::NotifyAction" right="" name="action" default=""/>
            </function>
            <function threadsafety="unspecified" name="onFailureOccured" fullname="PatchManagerObject::onFailureOccured" href="patchmanagerobject.html#onFailureOccured" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="151" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onFailureOccured()"/>
            <function threadsafety="unspecified" name="onLipstickChanged" fullname="PatchManagerObject::onLipstickChanged" href="patchmanagerobject.html#onLipstickChanged" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="143" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onLipstickChanged(const QString &amp;, const QVariantMap &amp;changedProperties, const QStringList &amp;invalidatedProperties)">
                <parameter left="const QString &amp;" right="" name="" default=""/>
                <parameter left="const QVariantMap &amp;" right="" name="changedProperties" default=""/>
                <parameter left="const QStringList &amp;" right="" name="invalidatedProperties" default=""/>
            </function>
            <function threadsafety="unspecified" name="onOriginalFileChanged" fullname="PatchManagerObject::onOriginalFileChanged" href="patchmanagerobject.html#onOriginalFileChanged" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="149" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onOriginalFileChanged(const QString &amp;path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function threadsafety="unspecified" name="onOsUpdateProgress" fullname="PatchManagerObject::onOsUpdateProgress" href="patchmanagerobject.html#onOsUpdateProgress" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="144" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onOsUpdateProgress(int progress)">
                <parameter left="int" right="" name="progress" default=""/>
            </function>
            <function threadsafety="unspecified" name="onTimerAction" fullname="PatchManagerObject::onTimerAction" href="patchmanagerobject.html#onTimerAction" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="145" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onTimerAction()"/>
            <function threadsafety="unspecified" name="patchToggleService" fullname="PatchManagerObject::patchToggleService" href="patchmanagerobject.html#patchToggleService" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="125" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void patchToggleService(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="prepareCacheRoot" fullname="PatchManagerObject::prepareCacheRoot" href="patchmanagerobject.html#prepareCacheRoot" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="223" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void prepareCacheRoot()"/>
            <function threadsafety="unspecified" name="process" fullname="PatchManagerObject::process" href="patchmanagerobject.html#process" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="93" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void process()"/>
            <function threadsafety="unspecified" name="putSettings" fullname="PatchManagerObject::putSettings" href="patchmanagerobject.html#putSettings" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="116" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool putSettings(const QString &amp;name, const QDBusVariant &amp;value)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QDBusVariant &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="putSettings" fullname="PatchManagerObject::putSettings" href="patchmanagerobject.html#putSettings-1" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="117" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool putSettings(const QString &amp;name, const QVariant &amp;value)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="refreshPatchList" fullname="PatchManagerObject::refreshPatchList" href="patchmanagerobject.html#refreshPatchList" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="222" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void refreshPatchList()"/>
            <function threadsafety="unspecified" name="registerDBus" fullname="PatchManagerObject::registerDBus" href="patchmanagerobject.html#registerDBus" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="193" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void registerDBus()"/>
            <function threadsafety="unspecified" name="requestCheckForUpdates" fullname="PatchManagerObject::requestCheckForUpdates" href="patchmanagerobject.html#requestCheckForUpdates" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="177" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void requestCheckForUpdates()">
                <target name="requestcheckforupdates" title="requestCheckForUpdates"/>
            </function>
            <function threadsafety="unspecified" name="requestDownloadCatalog" fullname="PatchManagerObject::requestDownloadCatalog" href="patchmanagerobject.html#requestDownloadCatalog" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="175" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void requestDownloadCatalog(const QVariantMap &amp;params, const QDBusMessage &amp;message)">
                <parameter left="const QVariantMap &amp;" right="" name="params" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
            </function>
            <function threadsafety="unspecified" name="requestDownloadPatchInfo" fullname="PatchManagerObject::requestDownloadPatchInfo" href="patchmanagerobject.html#requestDownloadPatchInfo" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="176" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void requestDownloadPatchInfo(const QString &amp;name, const QDBusMessage &amp;message)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <target name="requestdownloadpatchinfo" title="requestDownloadPatchInfo"/>
            </function>
            <function threadsafety="unspecified" name="resetPatchState" fullname="PatchManagerObject::resetPatchState" href="patchmanagerobject.html#resetPatchState" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="103" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool resetPatchState(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="resetSystem" fullname="PatchManagerObject::resetSystem" href="patchmanagerobject.html#resetSystem" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="190" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void resetSystem()"/>
            <function threadsafety="unspecified" name="resolveFailure" fullname="PatchManagerObject::resolveFailure" href="patchmanagerobject.html#resolveFailure" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="131" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void resolveFailure()"/>
            <function threadsafety="unspecified" name="restartKeyboard" fullname="PatchManagerObject::restartKeyboard" href="patchmanagerobject.html#restartKeyboard" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="182" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void restartKeyboard()"/>
            <function threadsafety="unspecified" name="restartLipstick" fullname="PatchManagerObject::restartLipstick" href="patchmanagerobject.html#restartLipstick" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="179" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void restartLipstick()"/>
            <function threadsafety="unspecified" name="restartService" fullname="PatchManagerObject::restartService" href="patchmanagerobject.html#restartService" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="188" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void restartService(const QString &amp;serviceName)">
                <parameter left="const QString &amp;" right="" name="serviceName" default=""/>
            </function>
            <function threadsafety="unspecified" name="restartServices" fullname="PatchManagerObject::restartServices" href="patchmanagerobject.html#restartServices" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="124" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void restartServices()"/>
            <function threadsafety="unspecified" name="sendActivation" fullname="PatchManagerObject::sendActivation" href="patchmanagerobject.html#sendActivation" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="205" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void sendActivation(const QString &amp;patch, const QString &amp;version)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="const QString &amp;" right="" name="version" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendMessageError" fullname="PatchManagerObject::sendMessageError" href="patchmanagerobject.html#sendMessageError" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="210" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void sendMessageError(const QDBusMessage &amp;message, const QString &amp;errorString)">
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <parameter left="const QString &amp;" right="" name="errorString" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendMessageReply" fullname="PatchManagerObject::sendMessageReply" href="patchmanagerobject.html#sendMessageReply" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="209" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void sendMessageReply(const QDBusMessage &amp;message, const QVariant &amp;result)">
                <parameter left="const QDBusMessage &amp;" right="" name="message" default=""/>
                <parameter left="const QVariant &amp;" right="" name="result" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendVote" fullname="PatchManagerObject::sendVote" href="patchmanagerobject.html#sendVote" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="171" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void sendVote(const QString &amp;patch, int action)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="int" right="" name="action" default=""/>
                <target name="sendvote" title="sendVote"/>
            </function>
            <function threadsafety="unspecified" name="setAppliedPatches" fullname="PatchManagerObject::setAppliedPatches" href="patchmanagerobject.html#setAppliedPatches" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="217" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setAppliedPatches(const QSet&lt;QString&gt; &amp;patches)">
                <parameter left="const QSet&lt;QString&gt; &amp;" right="" name="patches" default=""/>
            </function>
            <function threadsafety="unspecified" name="startLocalServer" fullname="PatchManagerObject::startLocalServer" href="patchmanagerobject.html#startLocalServer" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="196" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void startLocalServer()"/>
            <function threadsafety="unspecified" name="startReadingLocalServer" fullname="PatchManagerObject::startReadingLocalServer" href="patchmanagerobject.html#startReadingLocalServer" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="147" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void startReadingLocalServer()"/>
            <function threadsafety="unspecified" name="tryToLinkFakeParent" fullname="PatchManagerObject::tryToLinkFakeParent" href="patchmanagerobject.html#tryToLinkFakeParent" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="228" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool tryToLinkFakeParent(const QString &amp;path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function threadsafety="unspecified" name="tryToUnlinkFakeParent" fullname="PatchManagerObject::tryToUnlinkFakeParent" href="patchmanagerobject.html#tryToUnlinkFakeParent" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="229" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool tryToUnlinkFakeParent(const QString &amp;path)">
                <parameter left="const QString &amp;" right="" name="path" default=""/>
            </function>
            <function threadsafety="unspecified" name="unapplyAllPatches" fullname="PatchManagerObject::unapplyAllPatches" href="patchmanagerobject.html#unapplyAllPatches" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="100" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool unapplyAllPatches()"/>
            <function threadsafety="unspecified" name="unapplyPatch" fullname="PatchManagerObject::unapplyPatch" href="patchmanagerobject.html#unapplyPatch" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="99" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QVariantMap" signature="QVariantMap unapplyPatch(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="uninstallPatch" fullname="PatchManagerObject::uninstallPatch" href="patchmanagerobject.html#uninstallPatch" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="102" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool uninstallPatch(const QString &amp;patch)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
            </function>
            <function threadsafety="unspecified" name="votePatch" fullname="PatchManagerObject::votePatch" href="patchmanagerobject.html#votePatch" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="106" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void votePatch(const QString &amp;patch, int action)">
                <parameter left="const QString &amp;" right="" name="patch" default=""/>
                <parameter left="int" right="" name="action" default=""/>
            </function>
            <function threadsafety="unspecified" name="waitForLipstick" fullname="PatchManagerObject::waitForLipstick" href="patchmanagerobject.html#waitForLipstick" status="active" access="private" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void waitForLipstick()"/>
            <function threadsafety="unspecified" name="~PatchManagerObject" fullname="PatchManagerObject::~PatchManagerObject" href="patchmanagerobject.html#dtor.PatchManagerObject" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="81" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="~PatchManagerObject()"/>
            <enum threadsafety="unspecified" name="NotifyAction" fullname="PatchManagerObject::NotifyAction" href="patchmanagerobject-notify.html#NotifyAction-enum" status="active" access="public" location="patchmanagerobject.h" filepath="/home/nemo/devel/git/patchmanager/repo/src/bin/patchmanager-daemon/patchmanagerobject.h" lineno="83">
                <value name="NotifyActionSuccessApply" value="0"/>
                <value name="NotifyActionSuccessUnapply" value="1"/>
                <value name="NotifyActionFailedApply" value="2"/>
                <value name="NotifyActionFailedUnapply" value="3"/>
                <value name="NotifyActionUpdateAvailable" value="4"/>
            </enum>
        </class>
        <module name="PatchManagerDaemon" href="patchmanagerdaemon-module.html" status="internal" seen="false" title="" members="PatchManagerObject"/>
    </namespace>
</INDEX>
